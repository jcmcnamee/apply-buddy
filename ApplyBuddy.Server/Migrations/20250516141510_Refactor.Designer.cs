// <auto-generated />
using System;
using System.Collections.Generic;
using ApplyBuddy.Server.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ApplyBuddy.Server.Migrations
{
    [DbContext(typeof(ApplyBuddyDbContext))]
    [Migration("20250516141510_Refactor")]
    partial class Refactor
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ApplyBuddy.Server.Model.JobApplication.JobApplication", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ListingId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ListingId")
                        .IsUnique();

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("ApplyBuddy.Server.Model.JobApplication.SubmissionDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("details_type")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("character varying(21)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId")
                        .IsUnique();

                    b.ToTable("Submissions", (string)null);

                    b.HasDiscriminator<string>("details_type").HasValue("SubmissionDetails");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ApplyBuddy.Server.Model.JobApplication.UserTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.PrimitiveCollection<List<string>>("Activites")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("JobApplicationId")
                        .HasColumnType("uuid");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Priority")
                        .HasColumnType("integer");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("State")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("JobApplicationId");

                    b.ToTable("UserTask");
                });

            modelBuilder.Entity("ApplyBuddy.Server.Model.Listings.Listing", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("ClosingDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("DiscoverySourceId")
                        .HasColumnType("integer");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("ListedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PositionId")
                        .HasColumnType("integer");

                    b.Property<int?>("RecruiterId")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DiscoverySourceId");

                    b.HasIndex("PositionId");

                    b.HasIndex("RecruiterId");

                    b.ToTable("Listings");
                });

            modelBuilder.Entity("ApplyBuddy.Server.Model.Listings.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CompanyId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int?>("EmploymentType")
                        .HasColumnType("integer");

                    b.Property<int?>("Level")
                        .HasColumnType("integer");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.ComplexProperty<Dictionary<string, object>>("Salary", "ApplyBuddy.Server.Model.Listings.Position.Salary#Salary", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<decimal>("Amount")
                                .HasColumnType("numeric");

                            b1.Property<int>("Currency")
                                .HasColumnType("integer");

                            b1.Property<int>("Type")
                                .HasColumnType("integer");
                        });

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Positions", (string)null);
                });

            modelBuilder.Entity("ApplyBuddy.Server.Model.Listings.Recruiter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("integer");

                    b.Property<string>("LinkedInProfile")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.ComplexProperty<Dictionary<string, object>>("Details", "ApplyBuddy.Server.Model.Listings.Recruiter.Details#PersonDetails", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Email")
                                .HasColumnType("text");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("LastName")
                                .HasColumnType("text");

                            b1.ComplexProperty<Dictionary<string, object>>("PhoneNumber", "ApplyBuddy.Server.Model.Listings.Recruiter.Details#PersonDetails.PhoneNumber#PhoneNumber", b2 =>
                                {
                                    b2.IsRequired();

                                    b2.Property<string>("Number")
                                        .IsRequired()
                                        .HasColumnType("text");
                                });
                        });

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Recruiters");
                });

            modelBuilder.Entity("ApplyBuddy.Server.Model.ValueObjects.Channel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Channels");
                });

            modelBuilder.Entity("ApplyBuddy.Server.Model.ValueObjects.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("ApplyBuddy.Server.Model.JobApplication.NotSubmittedDetails", b =>
                {
                    b.HasBaseType("ApplyBuddy.Server.Model.JobApplication.SubmissionDetails");

                    b.HasDiscriminator().HasValue("not_submitted");
                });

            modelBuilder.Entity("ApplyBuddy.Server.Model.JobApplication.SubmittedDetails", b =>
                {
                    b.HasBaseType("ApplyBuddy.Server.Model.JobApplication.SubmissionDetails");

                    b.Property<int?>("ApplicationChannelId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("AppliedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("ChannelId")
                        .HasColumnType("integer");

                    b.HasIndex("ChannelId");

                    b.HasDiscriminator().HasValue("submitted");
                });

            modelBuilder.Entity("ApplyBuddy.Server.Model.JobApplication.JobApplication", b =>
                {
                    b.HasOne("ApplyBuddy.Server.Model.Listings.Listing", null)
                        .WithOne()
                        .HasForeignKey("ApplyBuddy.Server.Model.JobApplication.JobApplication", "ListingId");
                });

            modelBuilder.Entity("ApplyBuddy.Server.Model.JobApplication.SubmissionDetails", b =>
                {
                    b.HasOne("ApplyBuddy.Server.Model.JobApplication.JobApplication", null)
                        .WithOne("SubmissionDetails")
                        .HasForeignKey("ApplyBuddy.Server.Model.JobApplication.SubmissionDetails", "ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ApplyBuddy.Server.Model.JobApplication.UserTask", b =>
                {
                    b.HasOne("ApplyBuddy.Server.Model.JobApplication.JobApplication", null)
                        .WithMany("Tasks")
                        .HasForeignKey("JobApplicationId");
                });

            modelBuilder.Entity("ApplyBuddy.Server.Model.Listings.Listing", b =>
                {
                    b.HasOne("ApplyBuddy.Server.Model.ValueObjects.Channel", "DiscoverySource")
                        .WithMany()
                        .HasForeignKey("DiscoverySourceId");

                    b.HasOne("ApplyBuddy.Server.Model.Listings.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplyBuddy.Server.Model.Listings.Recruiter", "Recruiter")
                        .WithMany("Listings")
                        .HasForeignKey("RecruiterId");

                    b.Navigation("DiscoverySource");

                    b.Navigation("Position");

                    b.Navigation("Recruiter");
                });

            modelBuilder.Entity("ApplyBuddy.Server.Model.Listings.Position", b =>
                {
                    b.HasOne("ApplyBuddy.Server.Model.ValueObjects.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("ApplyBuddy.Server.Model.Listings.Recruiter", b =>
                {
                    b.HasOne("ApplyBuddy.Server.Model.ValueObjects.Company", "Company")
                        .WithMany("Recruiters")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("ApplyBuddy.Server.Model.JobApplication.SubmittedDetails", b =>
                {
                    b.HasOne("ApplyBuddy.Server.Model.ValueObjects.Channel", "Channel")
                        .WithMany()
                        .HasForeignKey("ChannelId");

                    b.Navigation("Channel");
                });

            modelBuilder.Entity("ApplyBuddy.Server.Model.JobApplication.JobApplication", b =>
                {
                    b.Navigation("SubmissionDetails")
                        .IsRequired();

                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("ApplyBuddy.Server.Model.Listings.Recruiter", b =>
                {
                    b.Navigation("Listings");
                });

            modelBuilder.Entity("ApplyBuddy.Server.Model.ValueObjects.Company", b =>
                {
                    b.Navigation("Recruiters");
                });
#pragma warning restore 612, 618
        }
    }
}
